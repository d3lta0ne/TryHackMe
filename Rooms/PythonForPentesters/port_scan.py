# pylint: disable=broad-exception-caught
# pylint: disable=unused-variable

"""
    Imported Modules to create a Port Scanner
"""
import sys
import socket
import pyfiglet

# Constants
ASCII_BANNER = pyfiglet.figlet_format("TryHackMe \n Python 4 Pentesters \Port Scanner")
IP = "192.168.1.6"
PORTS_RANGE = range(1,65535)

def open_ports():
    """Adds ports to a result array if they are marked as open after probing"""
    result = []
    for port in PORTS_RANGE:
        sys.stdout.flush()
        response = probe_ports(IP, port)
        if response == 0:
            result.append(port)
    return result

def probe_ports(ip_address, port, result = 1):
    """Probes the specific ports on a specific IP of a machine"""
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(0.5)
        request = sock.connect_ex((ip_address,port))
        if request == 0:
            result = request
        sock.close()
    except Exception as exception_all:
        pass
    return result

def main():
    """Main function."""
    print(ASCII_BANNER)

    if open_ports():
        print ("Open Ports are: ") 
        print (sorted(open_ports)) 
    else:
        print ("Looks like no ports are open :(")

if __name__ == "__main__":
    main()
    