# pylint: disable=broad-exception-caught
"""Module providing a packet creation function."""

from typing import Any, Tuple

# pylint: disable=E0611
from scapy.all import Ether, ARP, srp


# Constants
INTERFACE = "eth0"
IP_RANGE = "10.10.X.X/24"
BROADCAST_MAC = "ff:ff:ff:ff:ff:ff"

def create_arp_packet():
    """Create an ARP packet."""
    packet = Ether(dst=BROADCAST_MAC)/ARP(pdst=IP_RANGE)
    return packet

def send_arp_request(packet):
    """Send ARP request and print responses."""
    try:
        ans, unans = srp(packet, timeout=2, iface=INTERFACE, inter=0.1)
        for send, receive in ans:
            print(receive.sprintf(r"%Ether.src% - %ARP.psrc%"))
    except Exception as e:
        print(f"Error: {e}")

def main():
    """Main function."""
    arp_packet = create_arp_packet()
    send_arp_request(arp_packet)

if __name__ == "__main__":
    main()